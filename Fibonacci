// look at the diagram and sum up all the 1's i.e., fib(1)
// position starts with 0
// O(2^n) -- exponential time solution
function fibonacci(position) {
  if (position < 2) return position;
  else return fibonacci(position - 1) + fibonacci(position - 2);
}
 
fibonacci(6);


// O(n) -- linear time solution
function fibonacci(n){
  const fibo = [0, 1];
  
  if (n <= 2) return 1;

  for (let i = 2; i <= n; i++ ){
   fibo[i] = fibo[i-1] + fibo[i-2];
  }

 return fibo[n];
} 

//Memoization